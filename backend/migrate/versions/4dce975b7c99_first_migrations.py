from backend.core.security import pwd_context

"""first migrations

Revision ID: 4dce975b7c99
Revises: 
Create Date: 2025-04-01 10:49:28.093691

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '4dce975b7c99'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### создаем таблицы ###
    op.create_table('user',
                    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
                    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('is_superuser', sa.Boolean(), nullable=False),
                    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('account',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('account_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('balance', sa.Numeric(precision=10, scale=2), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_account_account_number'), 'account', ['account_number'], unique=True)
    op.create_index(op.f('ix_account_id'), 'account', ['id'], unique=False)
    op.create_table('payment',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('transaction_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('amount', sa.Integer(), nullable=False),
                    sa.Column('account_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_payment_id'), 'payment', ['id'], unique=False)
    # Вставка тестовых данных
    # Хеширование паролей перед вставкой
    hashed_password_test_user = pwd_context.hash('test')
    hashed_password_admin_user = pwd_context.hash('admin')

    # Вставка тестовых данных с хешированными паролями
    op.execute(f"""
               INSERT INTO "user" (id, email, first_name, last_name, is_superuser, hashed_password) 
               VALUES 
               (1, 'testuser@example.com', 'Test', 'User', FALSE, '{hashed_password_test_user}'),
               (2, 'admin@example.com', 'Admin', 'User', TRUE, '{hashed_password_admin_user}');
           """)

    op.execute("""
           INSERT INTO account (id, account_number, user_id, balance) 
           VALUES 
           (1, 'ACC-111B6FBF', 1, 0);
       """)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payment_id'), table_name='payment')
    op.drop_table('payment')
    op.drop_index(op.f('ix_account_id'), table_name='account')
    op.drop_index(op.f('ix_account_account_number'), table_name='account')
    op.drop_table('account')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
